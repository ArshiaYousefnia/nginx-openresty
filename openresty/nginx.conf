worker_processes 1;

events {
    worker_connections 1024;
}

http {
    lua_shared_dict cache 10m;

    # Load necessary Lua modules
    init_by_lua_block {
     
        name = "Arshia Yousefnia"  
        local redis = require "resty.redis"
        ngx.log(ngx.INFO, "Init by Lua executed")
    }
    
    resolver 127.0.0.11;
    
    server {
        listen 80 default_server;
        server_name _;

        location / {
            content_by_lua_block {
                local redis = require "resty.redis"
                local red = redis:new()

                red:set_timeout(1000)

               
                local ok, err = red:connect("redis", 6379)
                if not ok then
                    ngx.say("Failed to connect to Redis: ", err)
                    return
                end

                
                local uri = ngx.var.uri
                local res, err = red:setex(uri, 86400, uri)
                if not res then
                    ngx.say("Failed to set URI in Redis: ", err)
                    return
                end

                local cached_uri, err = red:get(uri)
                if cached_uri == ngx.null then
                    ngx.say("No cached URI found")
                else
                    ngx.say("Cached URI: ", cached_uri)
                end

               
                ngx.header["X-Test-Header"] = "OpenResty Header"
                ngx.say("Hello, ", name, "! Your request URI is: ", uri)
                ngx.say("Mr. Bombastic")
            }
        }
    }
}
